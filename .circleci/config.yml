---
common-steps:
  - &persist
    persist_to_workspace:
      root: /tmp/workspace
      paths:
        - "*"

  - &attach
    attach_workspace:
      at: /tmp/workspace

  - &installdeps
    run:
      name: Install Debian packaging dependencies
      command: |
        apt-get update && apt-get install -y make sudo
        make install-deps

  - &installtestdeps
    run:
      name: Install test dependencies
      command: |
        apt-get install reprotest faketime -y --no-install-recommends
        .venv/bin/pip install -r test-requirements.txt

  - &addsshkeys
    add_ssh_keys:
      fingerprints:
        - "85:3a:62:40:e2:91:ab:00:a0:67:9d:c5:26:e1:09:9f"


version: 2.1

jobs:
  lint-and-test:
    docker:
      - image: debian:bullseye
    steps:
      - checkout
      - *installdeps
      - *installtestdeps
      - run:
          name: install test requirements, run linters, and run tests
          command: |
            source .venv/bin/activate
            sed -i -re "292s/^(\s+).*\$/\1return _.prepend_to_build_command_raw('')/" /usr/lib/python3/dist-packages/reprotest/build.py
            make test

  reprotest-wheels:
    docker:
      - image: debian:bullseye
    # Our "ci" user will have problems if the repository is in /root
    working_directory: "/srv"
    steps:
      - checkout
      - *installdeps
      - *installtestdeps
      - run:
          name: install test requirements and run tests
          command: |
            adduser --system ci --ingroup root
            sed -i -re "292s/^(\s+).*\$/\1return _.prepend_to_build_command_raw('')/" /usr/lib/python3/dist-packages/reprotest/build.py
            # Have our "ci" user take over the git repo
            chown ci:root -R .
            sudo -u ci bash -c "source .venv/bin/activate && pytest -vvs tests/test_reproducible_wheels.py"

  reprepro-update-tor:
    docker:
      - image: debian:bullseye-backports
    steps:
      - checkout
      - *addsshkeys
      - run:
          name: clone and run reprepro update
          command: |
            apt-get update
            apt-get install -y reprepro ca-certificates dctrl-tools git git-lfs openssh-client \
                gh python3

            # Clone the dev repo and configure it
            git clone git@github.com:freedomofpress/securedrop-apt-test.git
            cd securedrop-apt-test
            git lfs install
            git config user.email "securedrop@freedom.press"
            git config user.name "sdcibot"

            # Import the Tor repo signing key
            gpg --import repo/conf/updates-keys/*.gpg
            # Run reprepro update, skip export since we just want the debs (and we don't have
            # the repo signing key anyways)
            REPREPRO_BASE_DIR=repo reprepro --export=never update

            # Move the new packages over, intentionally leaving the old ones around
            mv repo/pool/main/t/tor/*.deb core/focal/
            git add core/focal/*.deb
            # If there are changes, diff-index will fail, so we commit and push
            git diff-index --quiet HEAD || (git commit -m "Automatically updating Tor packages" \
                && git push origin main && ../scripts/new-tor-issue)


  build-rpm:
    parameters:
      package:
        type: string
    docker:
      - image: fedora:32
    environment:
      PKG_NAME: << parameters.package >>
    steps:
      - checkout
      - run:
          name: Clone and install dependencies
          command: |
            dnf install git make -y
            git clone https://github.com/freedomofpress/${PKG_NAME}.git
            cd ${PKG_NAME}
            make install-deps
      - run:
          name: Bump version and build rpm
          command: |
            cd ${PKG_NAME}
            # Version format is "${VERSION}-0.YYYYMMDDHHMMSS.fXX", which sorts lower than "${VERSION}-1"
            rpmdev-bumpspec --new="$(cat VERSION)-0.$(date +%Y%m%d%H%M%S)%{?dist}" rpm-build/SPECS/*.spec
            make build-rpm
            mkdir -p /tmp/workspace/
            cp -v rpm-build/RPMS/noarch/*.rpm /tmp/workspace/
      - *persist

  push-rpm:
    docker:
      - image: fedora:32
    steps:
      - checkout
      - *attach
      - *addsshkeys
      - run:
          name: Commit and push
          command: |
            dnf install -y ca-certificates git git-lfs openssh-clients python3-rpm python3-debian rpmdevtools
            git clone git@github.com:freedomofpress/securedrop-yum-test.git
            cd securedrop-yum-test
            git lfs install
            git config user.email "securedrop@freedom.press"
            git config user.name "sdcibot"
            mkdir -p workstation/dom0/f32-nightlies
            # Copy the new packages over and cleanup the old ones
            cp -v /tmp/workspace/*.rpm workstation/dom0/f32-nightlies/
            ~/project/scripts/clean-old-packages workstation/dom0/f32-nightlies 7
            git add .
            # If there are changes, diff-index will fail, so we commit
            git diff-index --quiet HEAD || git commit -m "Automated SecureDrop workstation build"
            # And clean up non-nightly packages too
            ~/project/scripts/clean-old-packages workstation/dom0/f32 4
            git add .
            git diff-index --quiet HEAD || git commit -m "Cleanup old packages"

            git push origin main


workflows:
  build-packages:
    jobs:
      - lint-and-test
      - reprotest-wheels
      - build-rpm:
          matrix:
            parameters:
              package: &rpmpackages
                - securedrop-updater
                - securedrop-workstation

  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - reprepro-update-tor
      - build-rpm:
          matrix:
            parameters:
              package: *rpmpackages
      - push-rpm:
          requires:
            - build-rpm
